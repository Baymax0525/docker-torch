#!/bin/bash -e

# Option parsing: http://stackoverflow.com/a/14203146
for key in "$@"
do
  case $key in
    -u|--update-versions)
      # Recreate versions.cfg with the newest versions of everything
      UPDATE_VERSIONS=YES
    ;;
    *)
      # Unknown option
    ;;
  esac
  shift
done

# Get latest commit hashes for Git repositories used in the image

if [ "$UPDATE_VERSIONS" = "YES" ]
then
  cat > versions.cfg <<EOF
# This file was automatically generated by "update.sh -u".
DEFAULT_TORCH_DISTRO_COMMIT=$(git ls-remote -h https://github.com/torch/distro.git master | awk '{ print $1 }')
DEFAULT_TORCHVID_COMMIT=$(git ls-remote -h https://github.com/anibali/torchvid.git master | awk '{ print $1 }')
DEFAULT_TORCH_HDF5_COMMIT=$(git ls-remote -h https://github.com/deepmind/torch-hdf5.git master | awk '{ print $1 }')
EOF
fi

source versions.cfg
export DEFAULT_TORCH_DISTRO_COMMIT
export DEFAULT_TORCHVID_COMMIT
export DEFAULT_TORCH_HDF5_COMMIT

# Create Dockerfiles from template

template="Dockerfile.template"
shell_format='$BASE:$DEFAULT_TORCH_DISTRO_COMMIT:$DEFAULT_TORCHVID_COMMIT:$DEFAULT_TORCH_HDF5_COMMIT:$CUDA_ONLY_STEPS'

# CUDA-enabled

dest="cuda-7.5/Dockerfile"
mkdir -p "$(dirname "$dest")"
export BASE=nvidia/cuda:7.5-cudnn5-devel

export CUDA_ONLY_STEPS='
# Install CuDNN with Torch bindings
RUN luarocks install https://raw.githubusercontent.com/soumith/cudnn.torch/R5/cudnn-scm-1.rockspec
'

envsubst $shell_format < $template > $dest

# No CUDA

dest="no-cuda/Dockerfile"
mkdir -p "$(dirname "$dest")"
export BASE=ubuntu:14.04
export CUDA_ONLY_STEPS=''
envsubst $shell_format < $template > $dest
